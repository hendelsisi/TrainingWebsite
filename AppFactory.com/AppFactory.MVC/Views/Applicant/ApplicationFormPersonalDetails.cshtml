@model AppFactory.MVC.ViewModels.StepOneViewModel

@{
    ViewBag.Title = "Application Form-Personal Details";
}

@section customCss {
    <style>
        #afeg-header-section {
            position: fixed;
            background-color: #82dafe;
        }

        #afeg-main {
            margin-top: 50px;
        }
    </style>
}

<style>
    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

<div id="afeg-main">
    <div class="container">
        <div class="row">
            <div class="stepwizard">
                <div class="stepwizard-row">
                    <div class="stepwizard-step">
                        <button type="button" class="btn btn-primary btn-circle">1</button>
                        <p>Personal Details</p>
                    </div>
                    <div class="stepwizard-step">
                        <button type="button" class="btn btn-default btn-circle" disabled="disabled">2</button>
                        <p>Education</p>
                    </div>
                    <div class="stepwizard-step">
                        <button type="button" class="btn btn-default btn-circle" disabled="disabled">3</button>
                        <p>Work Experience</p>
                    </div>
                    <div class="stepwizard-step">
                        <button type="button" class="btn btn-default btn-circle" disabled="disabled">4</button>
                        <p>Skills</p>
                    </div>
                    <div class="stepwizard-step">
                        <button type="button" class="btn btn-default btn-circle" disabled="disabled">5</button>
                        <p>Languages</p>
                    </div>
                </div>
            </div>
        </div>

        @using (Html.BeginForm("SubmitApplicationFormPersonalDetails", "Applicant", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <div class="row">
                <div class="afeg-spacer afeg-spacer-sm"></div>
                <div class="col-md-8">
                    <div class="form-horizontal">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        <div class="form-group">
                            @Html.Label("First Name", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Last Name", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <div class="radio-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "true", new { @checked = "checked" })
                                    @Html.Label("male", "Male")
                                </div>
                                <div class="radio-inline">
                                    @Html.RadioButtonFor(model => model.Gender, "false")
                                    @Html.Label("female", "Female")

                                </div>
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <style>
                            #Year, #Month, #Day {
                                width: auto;
                                margin-right: 10px;
                                display: inline-block;
                            }
                        </style>
                        <div class="form-group">
                            @Html.Label("Date Of Birth", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.Day, ViewBag.BirthDay as SelectList, htmlAttributes: new { @class = "form-control" })
                                @Html.DropDownListFor(model => model.Month, ViewBag.BirthMonth as SelectList, htmlAttributes: new { @class = "form-control" })
                                @Html.DropDownListFor(model => model.Year, ViewBag.BirthYear as SelectList, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                @Html.ValidationMessageFor(model => model.Day, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Telephone Number", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.TelephoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.TelephoneNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Mobile Number", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Address", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("City", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.DropDownListFor(model => model.CountryID, ViewBag.CountryList as SelectList, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Nationality", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.Nationality, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Nationality, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Postal Code", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Resume", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                <input type="file" name="ApplicantResume" id="ApplicantResume">
                                @Html.ValidationMessageFor(model => model.Resume, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.Label("Cover Letter", htmlAttributes: new { @class = "control-label col-md-4" })
                            <div class="col-md-8">
                                @Html.TextAreaFor(model => model.CoverLetter, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.CoverLetter, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @Html.HiddenFor(model => model.UserID)
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="form-group">
                    <div class="col-md-2" style="float: right;">
                        <input type="submit" value="Next >" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
