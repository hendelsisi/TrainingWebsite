@model AppFactory.MVC.ViewModels.ChangePassword

@{
    ViewBag.Title = "ChangePassword";
}

@section customCss {
    <style>
        #afeg-header-section {
            position: fixed;
            background-color: #82dafe;
        }

        #afeg-main {
            margin-top: 50px;
        }
    </style>
}


<div id="afeg-main">
    <div class="container">
        <div class="row">
            <div class="afeg-spacer afeg-spacer-sm">
                <div class="col-md-8">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">
                            <fieldset>
                                <legend>Change Password</legend>
                                @Html.HiddenFor(model => model.UserID)
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="form-group">
                                    @Html.LabelFor(model => model.CurrentPassword, "Current password", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.PasswordFor(model => model.CurrentPassword, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.NewPassword, "New password", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.PasswordFor(model => model.NewPassword, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.NewPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.ConfirmPassword, "Confirm password", htmlAttributes: new { @class = "control-label col-md-4" })
                                    <div class="col-md-8">
                                        @Html.PasswordFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <input type="submit" value="Save Changes" class="btn btn-primary" />
                                    </div>
                                </div>
                            </fieldset>
                        </div>

                    }
                    @if (TempData["Error"] != null)
                    {
                        <h5 class="text-danger">@TempData["Error"]</h5>
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
