@model AppFactory.MVC.ViewModels.ProfileViewModel

@{
    ViewBag.Title = "Action";
}

@section customCss {
    <style>
        #afeg-header-section {
            position: fixed;
            background-color: #82dafe;
        }

        #afeg-main {
            margin-top: 50px;
        }
    </style>
}

<div id="afeg-main">
    <div class="container">
        <div class="row">
            <div class="afeg-spacer afeg-spacer-sm"></div>
            <div class="col-md-8">

                @using (Html.BeginForm("EditProfile", "User", FormMethod.Post))
            {
                    @Html.AntiForgeryToken()

                    <div class="form-horizontal">
                        <fieldset>
                            <legend class="col-md-offset-1 col-md-11">Edit Profile</legend>
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Gender", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    <div class="radio-inline">
                                        @Html.RadioButtonFor(model => model.Gender, "true", new { @checked = "checked" })
                                        @Html.Label("male", "Male")
                                    </div>
                                    <div class="radio-inline">
                                        @Html.RadioButtonFor(model => model.Gender, "false")
                                        @Html.Label("female", "Female")
                                    </div>
                                    @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.DateOfBirth, "Date of birth", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.DateOfBirth, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.DateOfBirth, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.MobileNumber, "Mobile number", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.MobileNumber, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.MobileNumber, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.Label("Country", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.DropDownListFor(model => model.CountryID, ViewBag.CountryList as SelectList, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.CountryID, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PostalCode, "Postal code", htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-8">
                                    @Html.EditorFor(model => model.PostalCode, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.PostalCode, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <input type="submit" value="Save Changes" class="btn btn-default" />
                                </div>
                            </div>
                        </fieldset>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

@section scripts {
    @Scripts.Render("~/bundles/jqueryval")
}