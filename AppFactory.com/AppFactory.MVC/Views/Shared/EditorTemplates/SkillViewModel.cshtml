@using AppFactory.MVC.Extensions
@model AppFactory.MVC.Models.UserSkill


@section customCss {
    <style>
        #afeg-header-section {
            position: fixed;
            background-color: #82dafe;
        }

        #afeg-main {
            margin-top: 50px;
        }
    </style>
}

<style>
    .stepwizard-step p {
        margin-top: 10px;
    }

    .stepwizard-row {
        display: table-row;
    }

    .stepwizard {
        display: table;
        width: 100%;
        position: relative;
    }

    .stepwizard-step button[disabled] {
        opacity: 1 !important;
        filter: alpha(opacity=100) !important;
    }

    .stepwizard-row:before {
        top: 14px;
        bottom: 0;
        position: absolute;
        content: " ";
        width: 100%;
        height: 1px;
        background-color: #ccc;
        z-order: 0;
    }

    .stepwizard-step {
        display: table-cell;
        text-align: center;
        position: relative;
    }

    .btn-circle {
        width: 30px;
        height: 30px;
        text-align: center;
        padding: 6px 0;
        font-size: 12px;
        line-height: 1.428571429;
        border-radius: 15px;
    }
</style>

@using (Html.BeginCollectionItem("NewSkill"))
{


    <div class="container">

        <div class="row">
            <div class="col-md-8">

                <div class="form-horizontal">


                    <div class="form-group">


                        @Html.Label("Program Language", htmlAttributes: new { @class = "control-label col-md-4" })
                        <div class="col-md-8">


                            @Html.DropDownListFor(model => model.SkillID, ViewBag.SkillsList as SelectList, htmlAttributes: new { @class = "form-control" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.Label("Skill Level", htmlAttributes: new { @class = "control-label col-md-4" })

                        <div class="col-md-8">
                            <div class="radio-inline">
                                @Html.RadioButtonFor(model => model.SkillLevel, 1, new { @checked = "checked" })
                                @Html.Label("1", "1")
                            </div>

                            @for (int j = 2; j < 6; j++)
                            {
                                <div class="radio-inline">
                                    @Html.RadioButtonFor(model => model.SkillLevel, j)
                                    @Html.Label("" + j, "" + j)
                                </div>
                            }
                        </div>


                    </div>

                </div>
            </div>
        </div>

    </div>

}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
